<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnListarUsuarios.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
  <data name="btnSalir.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        D4//AL9PdDHcsTxDAAAAAElFTkSuQmCC
</value>
  </data>
</root>