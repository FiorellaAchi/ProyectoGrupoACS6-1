<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtnRegresar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        KI1LmQAAAABJRU5ErkJggg==
</value>
  </data>
</root>