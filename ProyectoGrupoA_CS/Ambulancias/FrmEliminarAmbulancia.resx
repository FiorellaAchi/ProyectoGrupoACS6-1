<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtnEliminar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        9GzDx+f/uaKLDcrwztcAAAAASUVORK5CYII=
</value>
  </data>
  <data name="BtnRegresar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        rwAAAK8BK7AVuQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAALPSURBVEhLpVbP
        TxNBFH7dLQuJLdw0UiTxwJ+gpV6MTauJ2sbEq0oRTgpGExX8QaIHTx7koBfRRGOiiYkeNIZyELyKFxVj
        jFXUaPQmHhQPdPt838wWdre7tNKXfN3tzJvvzbxfs1RHugVDZJpTZFmfyDD+KljWvBrDnNb5b+kSopsU
        idhCZFNym019h5lOn9XAe2+qLDoV0cHzhlrToOSF9A+1ty/R6BjT7Gumd5+DMfuKaeQ8Uzy+RIasIcpp
        inAZlh1VKLPLphdzwaRBwCbSGZymojhCJK8UDsnx384HE60GrDnYz46RmpN0Kbdg537yh0+Yxi4yPSp6
        x4OAtemM7bgroakhCCh87nfLhUscMU2OGIY8o0y37nrng4C4xOLVwCvplmPZKqBuRSGXcS4MDnDp21fe
        3NPDtG+/VycMI+ewtizcm2DgmEpFWK4quMi/L/zk4sw0W21tTMMnvERhQNDBqerENIuUTNnLkz7yyemn
        HOvoYGP9BqY795kePA6He5Nbe8vCPUlSlV+of1APXh73kP/4tcDJVIplJw3BaG1lunJVc6EYW6Tixcqi
        qk4ZjG7s5N253DI58OZDiaeezdQFTpremeVoZ0IbOHWGJZsWJYPkB38cA3vyeY+BudL7QEI/YGBHNrNi
        4OQo4iDp2iJNrDCgB5t1ERJh/JrmQtFZ1sdqkMtqEHCC3LemILv61pakE2SkErpiI2k6dHxFZzU8fyn+
        F06iIzCAQiur4nArNVNoiKmr0CATquX6W7MY8bSK2/e880HA7mMxtIoJh1uJXDAS8XS2+Wa3PY1L6rdw
        upqdlpwcq6Ki7zfSCLDmQAGuge/3aspa0RcOWq476PUAt2Dnmjz0wqlKTrkrJjFB4LE4iBTAHAK6Tnyu
        3RK6c78kVD/XF3pF1Qluuuqlj3c0s+qlT3RdrVmDIM2OCklRfaq4P1swhjlXKtYK0T8oocm3QgpqCwAA
        AABJRU5ErkJggg==
</value>
  </data>
</root>